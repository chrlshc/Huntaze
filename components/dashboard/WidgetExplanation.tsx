'use client';

import { useState } from 'react';
import { X, Info, DollarSign, Calendar, Users, Brain } from 'lucide-react';

interface WidgetExplanationProps {
  widgetName: string;
  onClose?: () => void;
}

export function WidgetExplanation({ widgetName, onClose }: WidgetExplanationProps) {
  const explanations: Record<string, {
    title: string;
    icon: any;
    problem: string;
    solution: string;
    benefits: string[];
    example: string;
  }> = {
    'revenue': {
      title: 'Revenue Goal Widget',
      icon: DollarSign,
      problem: 'Tu ne sais pas si tu es sur la bonne voie pour atteindre tes objectifs financiers',
      solution: 'Suivi en temps r√©el avec pr√©dictions AI et suggestions personnalis√©es',
      benefits: [
        'Voir exactement combien gagner par jour pour atteindre ton goal',
        'Suggestions AI bas√©es sur ta niche (fitness, gaming, etc.)',
        'Alertes quand tu approches un milestone important',
        'Comparaison avec les meilleures p√©riodes pass√©es'
      ],
      example: 'Si tu es dans le fitness, l\'AI te sugg√©rera de lancer une offre "Summer Body" en mai car c\'est l√† que tes fans d√©pensent le plus.'
    },
    'calendar': {
      title: 'Content Calendar Widget',
      icon: Calendar,
      problem: 'Tu postes au mauvais moment et rates 70% de ton audience',
      solution: 'Planning intelligent qui s\'adapte √† ta niche et timezone',
      benefits: [
        'Horaires optimaux selon ta niche (ex: fitness = 6h-8h, gaming = 20h-23h)',
        'Rappels avant les peak hours de tes fans',
        'Vue d\'ensemble de ton contenu planifi√©',
        'Suggestions de contenu bas√©es sur les tendances'
      ],
      example: 'Pour une gameuse, l\'AI d√©tecte que ses fans sont 3x plus actifs le vendredi soir et sugg√®re un stream √† 21h.'
    },
    'fans': {
      title: 'Fan Engagement Widget',
      icon: Users,
      problem: 'Tu traites tous tes fans pareil alors que 5% g√©n√®rent 80% des revenus',
      solution: 'Segmentation AI automatique avec strat√©gies personnalis√©es',
      benefits: [
        'Identifier tes VIP fans instantan√©ment',
        'Voir qui est sur le point de se d√©sabonner',
        'Suggestions de messages personnalis√©s par segment',
        'Tracker le potentiel de chaque fan'
      ],
      example: 'L\'AI identifie que "John" d√©pense 300$/mois et te sugg√®re de lui envoyer du contenu exclusif pour le garder engag√©.'
    },
    'performance': {
      title: 'AI Performance Widget',
      icon: Brain,
      problem: 'Tu passes 4h/jour √† r√©pondre aux messages r√©p√©titifs',
      solution: 'AI qui r√©pond dans ton style pendant que tu cr√©es du contenu',
      benefits: [
        'R√©ponses 24/7 m√™me quand tu dors',
        'Apprentissage continu de ton style unique',
        'D√©tection automatique des opportunit√©s de vente',
        'M√©triques d√©taill√©es sur ce qui convertit'
      ],
      example: 'Un fan demande "Tu fais des customs?" √† 3h du matin. L\'AI r√©pond dans ton style, propose tes tarifs, et tu te r√©veilles avec une vente!'
    }
  };

  const widget = explanations[widgetName];
  if (!widget) return null;

  return (
    <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4">
      <div className="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div className="sticky top-0 bg-white border-b border-gray-200 p-6 flex items-center justify-between">
          <div className="flex items-center gap-3">
            <div className="p-2 bg-gradient-to-br from-purple-500 to-pink-500 rounded-xl">
              <widget.icon className="w-6 h-6 text-white" />
            </div>
            <h2 className="text-2xl font-bold text-gray-900">{widget.title}</h2>
          </div>
          {onClose && (
            <button 
              onClick={onClose}
              className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
            >
              <X className="w-5 h-5 text-gray-500" />
            </button>
          )}
        </div>

        <div className="p-6 space-y-6">
          {/* Problem */}
          <div className="bg-red-50 border border-red-200 rounded-xl p-4">
            <h3 className="font-semibold text-red-900 mb-2 flex items-center gap-2">
              ‚ùå Le Probl√®me
            </h3>
            <p className="text-red-700">{widget.problem}</p>
          </div>

          {/* Solution */}
          <div className="bg-green-50 border border-green-200 rounded-xl p-4">
            <h3 className="font-semibold text-green-900 mb-2 flex items-center gap-2">
              ‚úÖ La Solution Huntaze
            </h3>
            <p className="text-green-700">{widget.solution}</p>
          </div>

          {/* Benefits */}
          <div>
            <h3 className="font-semibold text-gray-900 mb-3">Ce que √ßa t\'apporte :</h3>
            <ul className="space-y-2">
              {widget.benefits.map((benefit, index) => (
                <li key={index} className="flex items-start gap-3">
                  <span className="text-purple-600 font-bold">‚Ä¢</span>
                  <span className="text-gray-700">{benefit}</span>
                </li>
              ))}
            </ul>
          </div>

          {/* Real Example */}
          <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-4">
            <h3 className="font-semibold text-purple-900 mb-2 flex items-center gap-2">
              üí° Exemple Concret
            </h3>
            <p className="text-purple-700">{widget.example}</p>
          </div>

          {/* CTA */}
          <div className="text-center pt-4">
            <p className="text-sm text-gray-600 mb-2">
              C\'est √ßa la diff√©rence entre gagner 5K et 25K par mois
            </p>
            {onClose && (
              <button 
                onClick={onClose}
                className="px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 text-white rounded-xl font-semibold hover:shadow-lg transition-all"
              >
                J\'ai compris, montrez-moi mes stats!
              </button>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}