AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Huntaze Prisma Walking Skeleton - Canary Deployment with Shadow Traffic
Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30
    Tracing: Active
    MemorySize: 512
    Environment:
      Variables:
        NODE_ENV: production
        APP_ID:
          Ref: AppConfigApp
        ENV_ID:
          Ref: AppConfigEnv
        FEATURES_PROFILE_ID:
          Ref: AppConfigProfile
Parameters:
  DatabaseSecretArn:
    Type: String
    Description: ARN of the database secret in Secrets Manager
    Default: arn:aws:secretsmanager:us-east-1:317805897534:secret:huntaze/database
  CostAnomalyMonitorArn:
    Type: String
    Description: ARN of existing Cost Anomaly Monitor
    Default: arn:aws:ce::317805897534:anomalymonitor/c23a49a4-8fbf-4e6f-b242-9c5db0913b1a
Resources:
  AppConfigApp:
    Type: AWS::AppConfig::Application
    Properties:
      Name: huntaze-flags
      Description: Feature flags for Huntaze
  AppConfigEnv:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId:
        Ref: AppConfigApp
      Name: production
      Description: Production environment
  AppConfigProfile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      ApplicationId:
        Ref: AppConfigApp
      Name: feature-flags
      LocationUri: hosted
      Type: AWS.AppConfig.FeatureFlags
  AppConfigDeploymentStrategy:
    Type: AWS::AppConfig::DeploymentStrategy
    Properties:
      Name: Canary1Percent5Minutes
      Description: Deploy to 1% over 5 minutes with 5 min bake time
      DeploymentDurationInMinutes: 5
      GrowthFactor: 1
      GrowthType: LINEAR
      ReplicateTo: NONE
      FinalBakeTimeInMinutes: 5
  MockReadFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: huntaze-mock-read
      CodeUri: MockReadFn
      Handler: mock-handler.handler
      AutoPublishAlias: live
      DeploymentPreference:
        Type: Canary10Percent5Minutes
        Alarms:
        - Ref: ErrorRateAlarm
      Environment:
        Variables:
          CANDIDATE_FN_ARN:
            Fn::GetAtt:
            - PrismaReadFn
            - Arn
      Policies:
      - AWSXRayDaemonWriteAccess
      - Statement:
        - Effect: Allow
          Action:
          - appconfig:StartConfigurationSession
          - appconfig:GetLatestConfiguration
          Resource: '*'
        - Effect: Allow
          Action: lambda:InvokeFunction
          Resource:
            Fn::GetAtt:
            - PrismaReadFn
            - Arn
        - Effect: Allow
          Action: logs:CreateLogGroup
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/huntaze-mock-read:*
    Metadata:
      SamResourceId: MockReadFn
  PrismaReadFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: huntaze-prisma-read
      CodeUri: PrismaReadFn
      Handler: prisma-handler.handler
      Environment:
        Variables:
          DATABASE_URL:
            Fn::Sub: '{{resolve:secretsmanager:${DatabaseSecretArn}:SecretString:DATABASE_URL}}'
      Policies:
      - AWSXRayDaemonWriteAccess
      - Statement:
        - Effect: Allow
          Action:
          - secretsmanager:GetSecretValue
          Resource:
            Ref: DatabaseSecretArn
        - Effect: Allow
          Action: logs:CreateLogGroup
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/huntaze-prisma-read:*
    Metadata:
      SamResourceId: PrismaReadFn
  ErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: huntaze-lambda-error-rate-gt-2pct
      AlarmDescription: Trigger rollback if error rate exceeds 2% over 5 minutes
      ComparisonOperator: GreaterThanThreshold
      Threshold: 0.02
      EvaluationPeriods: 5
      DatapointsToAlarm: 3
      TreatMissingData: notBreaching
      Metrics:
      - Id: errorRate
        Expression: errors / FILL(invocations, 1)
        Label: Error Rate
      - Id: errors
        MetricStat:
          Metric:
            Namespace: AWS/Lambda
            MetricName: Errors
            Dimensions:
            - Name: FunctionName
              Value:
                Ref: MockReadFn
          Period: 60
          Stat: Sum
        ReturnData: false
      - Id: invocations
        MetricStat:
          Metric:
            Namespace: AWS/Lambda
            MetricName: Invocations
            Dimensions:
            - Name: FunctionName
              Value:
                Ref: MockReadFn
          Period: 60
          Stat: Sum
        ReturnData: false
  ErrorRateAlarmMetricMath:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: huntaze-lambda-error-rate-metric-math
      AlarmDescription: Error rate calculated via Metric Math (Errors/Invocations)
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 2
      TreatMissingData: notBreaching
      AlarmActions:
      - Ref: ErrorRateAlarmTopic
      Metrics:
      - Id: e1
        Expression: IF(m2>0, (m1/m2)*100, 0)
        Label: Error Rate %
      - Id: m1
        MetricStat:
          Metric:
            Namespace: AWS/Lambda
            MetricName: Errors
            Dimensions:
            - Name: FunctionName
              Value:
                Ref: MockReadFn
          Period: 300
          Stat: Sum
        ReturnData: false
      - Id: m2
        MetricStat:
          Metric:
            Namespace: AWS/Lambda
            MetricName: Invocations
            Dimensions:
            - Name: FunctionName
              Value:
                Ref: MockReadFn
          Period: 300
          Stat: Sum
        ReturnData: false
  PerformanceAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: huntaze-lambda-p95-latency
      AlarmDescription: P95 latency > 500ms
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      DatapointsToAlarm: 2
      Threshold: 500
      TreatMissingData: notBreaching
      MetricName: Duration
      Namespace: AWS/Lambda
      ExtendedStatistic: p95
      Dimensions:
      - Name: FunctionName
        Value:
          Ref: MockReadFn
      Period: 300
  ErrorRateAlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: huntaze-production-alerts
      DisplayName: Huntaze Production Alerts
  MonthlyBudget:
    Type: AWS::Budgets::Budget
    Properties:
      Budget:
        BudgetName: huntaze-monthly-budget
        BudgetLimit:
          Amount: 100
          Unit: USD
        TimeUnit: MONTHLY
        BudgetType: COST
        CostFilters: {}
      NotificationsWithSubscribers:
      - Notification:
          NotificationType: ACTUAL
          ComparisonOperator: GREATER_THAN
          Threshold: 50
          ThresholdType: PERCENTAGE
        Subscribers:
        - SubscriptionType: SNS
          Address:
            Ref: ErrorRateAlarmTopic
      - Notification:
          NotificationType: ACTUAL
          ComparisonOperator: GREATER_THAN
          Threshold: 80
          ThresholdType: PERCENTAGE
        Subscribers:
        - SubscriptionType: SNS
          Address:
            Ref: ErrorRateAlarmTopic
      - Notification:
          NotificationType: ACTUAL
          ComparisonOperator: GREATER_THAN
          Threshold: 100
          ThresholdType: PERCENTAGE
        Subscribers:
        - SubscriptionType: SNS
          Address:
            Ref: ErrorRateAlarmTopic
      - Notification:
          NotificationType: FORECASTED
          ComparisonOperator: GREATER_THAN
          Threshold: 100
          ThresholdType: PERCENTAGE
        Subscribers:
        - SubscriptionType: SNS
          Address:
            Ref: ErrorRateAlarmTopic
  CostAnomalySubscription:
    Type: AWS::CE::AnomalySubscription
    Properties:
      SubscriptionName: huntaze-cost-anomaly-alerts
      Threshold: 10
      Frequency: IMMEDIATE
      MonitorArnList:
      - Ref: CostAnomalyMonitorArn
      Subscribers:
      - Type: SNS
        Address:
          Ref: ErrorRateAlarmTopic
  XRaySamplingRule:
    Type: AWS::XRay::SamplingRule
    Properties:
      SamplingRule:
        RuleName: huntaze-production-sampling
        Priority: 1000
        FixedRate: 0.1
        ReservoirSize: 1
        ServiceName: huntaze-*
        ServiceType: '*'
        Host: '*'
        HTTPMethod: '*'
        URLPath: '*'
        ResourceARN: '*'
        Version: 1
  DLQQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: huntaze-lambda-dlq
      MessageRetentionPeriod: 1209600
      VisibilityTimeout: 60
  CleanupSchedule:
    Type: AWS::Events::Rule
    Properties:
      Name: huntaze-flag-cleanup-7days
      Description: Cleanup feature flags after 7 days of stability
      ScheduleExpression: rate(7 days)
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - CleanupFn
          - Arn
        Id: cleanup-target
  CleanupFnPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: CleanupFn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - CleanupSchedule
        - Arn
  CleanupFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: huntaze-flag-cleanup
      CodeUri: CleanupFn
      Handler: cleanup-handler.handler
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - appconfig:GetConfigurationProfile
          - appconfig:CreateHostedConfigurationVersion
          - appconfig:StartDeployment
          Resource: '*'
        - Effect: Allow
          Action: logs:CreateLogGroup
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
            Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/huntaze-flag-cleanup:*
    Metadata:
      SamResourceId: CleanupFn
  MonitoringDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: huntaze-prisma-migration
      DashboardBody:
        Fn::Sub: "{\n  \"widgets\": [\n    {\n      \"type\": \"metric\",\n      \"\
          properties\": {\n        \"metrics\": [\n          [\"AWS/Lambda\", \"Invocations\"\
          , {\"stat\": \"Sum\"}],\n          [\".\", \"Errors\", {\"stat\": \"Sum\"\
          }]\n        ],\n        \"view\": \"timeSeries\",\n        \"region\": \"\
          ${AWS::Region}\",\n        \"title\": \"Lambda Metrics\",\n        \"period\"\
          : 60\n      }\n    },\n    {\n      \"type\": \"metric\",\n      \"properties\"\
          : {\n        \"metrics\": [\n          [\"AWS/Budgets\", \"ActualSpend\"\
          , {\"stat\": \"Average\"}],\n          [\".\", \"ForecastedSpend\", {\"\
          stat\": \"Average\"}]\n        ],\n        \"view\": \"timeSeries\",\n \
          \       \"region\": \"${AWS::Region}\",\n        \"title\": \"Cost Monitoring\
          \ - Budget\",\n        \"period\": 86400,\n        \"yAxis\": {\n      \
          \    \"left\": {\n            \"label\": \"USD\"\n          }\n        }\n\
          \      }\n    }\n  ]\n}\n"
Outputs:
  MockReadFnArn:
    Description: ARN of the Mock Read Lambda
    Value:
      Fn::GetAtt:
      - MockReadFn
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MockReadFnArn
  PrismaReadFnArn:
    Description: ARN of the Prisma Read Lambda
    Value:
      Fn::GetAtt:
      - PrismaReadFn
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrismaReadFnArn
  ErrorRateAlarmArn:
    Description: ARN of the Error Rate Alarm
    Value:
      Fn::GetAtt:
      - ErrorRateAlarm
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-ErrorRateAlarmArn
  MetricMathAlarmArn:
    Description: ARN of the Metric Math Error Rate Alarm
    Value:
      Fn::GetAtt:
      - ErrorRateAlarmMetricMath
      - Arn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-MetricMathAlarm
  XRaySamplingRuleName:
    Description: X-Ray Sampling Rule Name
    Value:
      Ref: XRaySamplingRule
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-XRaySamplingRule
  AlertsTopicArn:
    Description: SNS Topic for Production Alerts
    Value:
      Ref: ErrorRateAlarmTopic
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AlertsTopic
  AppConfigAppId:
    Description: AppConfig Application ID
    Value:
      Ref: AppConfigApp
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AppConfigAppId
  AppConfigEnvId:
    Description: AppConfig Environment ID
    Value:
      Ref: AppConfigEnv
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AppConfigEnvId
  AppConfigProfileId:
    Description: AppConfig Configuration Profile ID
    Value:
      Ref: AppConfigProfile
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-AppConfigProfileId
  DashboardURL:
    Description: CloudWatch Dashboard URL
    Value:
      Fn::Sub: https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=huntaze-prisma-migration
  BudgetName:
    Description: AWS Budget Name
    Value: huntaze-monthly-budget
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-BudgetName
  CostAnomalyMonitorArn:
    Description: Cost Anomaly Monitor ARN (existing)
    Value:
      Ref: CostAnomalyMonitorArn
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-CostAnomalyMonitor
