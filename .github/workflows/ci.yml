name: CI

on: [push, pull_request]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npx playwright install --with-deps

  unit-integration:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      - run: npm ci
      
      - name: Vitest w/ coverage gates
        run: |
          npx vitest run --coverage --reporter=dot
          
      - name: Enforce coverage thresholds
        run: node scripts/check-coverage.mjs 80 80 80 80  # stmts/branches/fns/lines
        
      - name: Generate requirements matrix
        run: node scripts/requirements-matrix.mjs
        
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  e2e:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        shard: [1/3, 2/3, 3/3]  # speed via sharding
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npx playwright install --with-deps
      
      - name: Start app (preview)
        run: npm run start:test &  # your preview server
        
      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: Playwright (shard ${{ matrix.shard }})
        run: npx playwright test --shard=${{ matrix.shard }} --reporter=line
        
      - uses: actions/upload-artifact@v4
        if: always()
        with: 
          name: pw-report-${{ matrix.shard }}
          path: playwright-report

  lighthouse:
    needs: e2e
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      - run: npm ci
      
      - name: Build for production
        run: npm run build
        
      - name: Start production server
        run: npm run start &
        
      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000
        
      - name: LHCI (gates = Core Web Vitals)
        run: npx lhci autorun
        
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report
          path: .lighthouseci

  security-audit:
    needs: unit-integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: 
          node-version: 20
          cache: 'npm'
      - run: npm ci
      
      - name: Security audit
        run: npm audit --audit-level high
        
      - name: OWASP ASVS L2 checklist
        run: node scripts/security-checklist.mjs