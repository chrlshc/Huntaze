version: '3.8'

services:
  # Site web Huntaze
  huntaze-site:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: huntaze-site
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: "0.0.0.0"
    ports:
      - "3003:3000"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://huntaze-site:3000/api/health"]
      interval: 30s
      timeout: 10s
      start_period: 30s
      retries: 3
    networks:
      - huntaze-network

  # AutoGen microservice (FastAPI)
  autogen-service:
    build:
      context: ./autogen-service
      dockerfile: Dockerfile
    container_name: autogen-service
    restart: unless-stopped
    environment:
      LLM_PROXY_URL: https://app.huntaze.com/api/internal/llm
      NEXTJS_WEBHOOK_URL: https://app.huntaze.com/api/internal/autogen/events
      AUTOGEN_HMAC_SECRET: ${AUTOGEN_HMAC_SECRET:-change-me}
      DDB_REGION: ${AWS_REGION:-us-east-1}
      DDB_TABLE_SESSIONS: ai_sessions
      DDB_TABLE_MESSAGES: ai_session_messages
      DDB_TABLE_ARTIFACTS: ai_session_artifacts
    depends_on:
      - huntaze-site
    ports:
      - "8000:8000"
    networks:
      - huntaze-network

  # Nginx pour Huntaze
  nginx-huntaze:
    image: nginx:alpine
    container_name: nginx-huntaze
    restart: unless-stopped
    depends_on:
      - huntaze-site
    ports:
      - "8080:80"  # Port temporaire pour test
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - huntaze-network

networks:
  huntaze-network:
    name: huntaze-network
