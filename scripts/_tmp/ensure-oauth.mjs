import { DynamoDBClient, CreateTableCommand, DescribeTableCommand, UpdateTableCommand } from '@aws-sdk/client-dynamodb';
const TABLE = 'huntaze-oauth-tokens';
const REGION = process.env.AWS_REGION || 'us-east-1';
const ddb = new DynamoDBClient({ region: REGION });
async function existsTable() { try { await ddb.send(new DescribeTableCommand({ TableName: TABLE })); return true; } catch (e) { if (e?.name==='ResourceNotFoundException') return false; throw e; } }
async function existsGsi(name){ const out = await ddb.send(new DescribeTableCommand({ TableName: TABLE })); return (out.Table?.GlobalSecondaryIndexes||[]).some(ix=>ix.IndexName===name); }
if(!(await existsTable())){ console.log(`[ensure] creating table ${TABLE}...`); try{ await ddb.send(new CreateTableCommand({ TableName: TABLE, BillingMode: 'PAY_PER_REQUEST', KeySchema: [ {AttributeName:'userId',KeyType:'HASH'}, {AttributeName:'platform',KeyType:'RANGE'} ], AttributeDefinitions: [ {AttributeName:'userId',AttributeType:'S'},{AttributeName:'platform',AttributeType:'S'} ], })); console.log('[ensure] table created'); }catch(e){ console.log('[ensure] create table info:', e?.name||e?.message||e); } } else { console.log('[ensure] table exists'); }
if(!(await existsGsi('byExpiry'))){ console.log('[ensure] adding GSI byExpiry...'); try{ await ddb.send(new UpdateTableCommand({ TableName: TABLE, AttributeDefinitions:[ {AttributeName:'platform',AttributeType:'S'},{AttributeName:'expiresAt',AttributeType:'N'} ], GlobalSecondaryIndexUpdates:[{ Create:{ IndexName:'byExpiry', KeySchema:[ {AttributeName:'platform',KeyType:'HASH'},{AttributeName:'expiresAt',KeyType:'RANGE'} ], Projection:{ProjectionType:'ALL'}, ProvisionedThroughput:{ReadCapacityUnits:1,WriteCapacityUnits:1} } }] })); console.log('[ensure] GSI creation requested. It may take minutes to become ACTIVE.'); }catch(e){ console.log('[ensure] add GSI info:', e?.name||e?.message||e); } } else { console.log('[ensure] GSI byExpiry exists'); }
