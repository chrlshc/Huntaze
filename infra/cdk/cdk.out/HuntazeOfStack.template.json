{
 "Resources": {
  "OfSessionsKmsKey8FE2B453": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "EnableKeyRotation": true,
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::317805897534:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfSessionsKmsKey/Resource"
   }
  },
  "OfSessionsKmsKeyAliasB4E043AD": {
   "Type": "AWS::KMS::Alias",
   "Properties": {
    "AliasName": "alias/huntaze-of-sessions",
    "TargetKeyId": {
     "Fn::GetAtt": [
      "OfSessionsKmsKey8FE2B453",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfSessionsKmsKey/Alias/Resource"
   }
  },
  "Sessions8896A56D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "HuntazeOfSessions"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/Sessions/Resource"
   }
  },
  "Messages804FA4EB": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "id",
      "KeyType": "HASH"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "HuntazeOfMessages"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/Messages/Resource"
   }
  },
  "ThreadsE6A0B71E": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "conversationId",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "conversationId",
      "KeyType": "RANGE"
     }
    ],
    "SSESpecification": {
     "SSEEnabled": true
    },
    "TableName": "HuntazeOfThreads"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/Threads/Resource"
   }
  },
  "OfSendQueue3961ABF3": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 345600,
    "QueueName": "HuntazeOfSendQueue",
    "VisibilityTimeout": 120
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfSendQueue/Resource"
   }
  },
  "OfVpcE0BFA4EC": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/Resource"
   }
  },
  "OfVpcPublicSubnet1Subnet14897662": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/Subnet"
   }
  },
  "OfVpcPublicSubnet1RouteTableAFAE1FD6": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/RouteTable"
   }
  },
  "OfVpcPublicSubnet1RouteTableAssociation6ECB1953": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OfVpcPublicSubnet1RouteTableAFAE1FD6"
    },
    "SubnetId": {
     "Ref": "OfVpcPublicSubnet1Subnet14897662"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "OfVpcPublicSubnet1DefaultRoute088B3E22": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "OfVpcIGW32ABBEF6"
    },
    "RouteTableId": {
     "Ref": "OfVpcPublicSubnet1RouteTableAFAE1FD6"
    }
   },
   "DependsOn": [
    "OfVpcVPCGWAC29B99A"
   ],
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/DefaultRoute"
   }
  },
  "OfVpcPublicSubnet1EIPF1D63041": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/EIP"
   }
  },
  "OfVpcPublicSubnet1NATGateway763B4778": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "OfVpcPublicSubnet1EIPF1D63041",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "OfVpcPublicSubnet1Subnet14897662"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "OfVpcPublicSubnet1DefaultRoute088B3E22",
    "OfVpcPublicSubnet1RouteTableAssociation6ECB1953"
   ],
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet1/NATGateway"
   }
  },
  "OfVpcPublicSubnet2SubnetD37B0406": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet2/Subnet"
   }
  },
  "OfVpcPublicSubnet2RouteTable178D1515": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet2/RouteTable"
   }
  },
  "OfVpcPublicSubnet2RouteTableAssociation77451F07": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OfVpcPublicSubnet2RouteTable178D1515"
    },
    "SubnetId": {
     "Ref": "OfVpcPublicSubnet2SubnetD37B0406"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "OfVpcPublicSubnet2DefaultRoute28473A7F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "OfVpcIGW32ABBEF6"
    },
    "RouteTableId": {
     "Ref": "OfVpcPublicSubnet2RouteTable178D1515"
    }
   },
   "DependsOn": [
    "OfVpcVPCGWAC29B99A"
   ],
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PublicSubnet2/DefaultRoute"
   }
  },
  "OfVpcPrivateSubnet1SubnetF2C8B46B": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet1/Subnet"
   }
  },
  "OfVpcPrivateSubnet1RouteTableD283FA7B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet1/RouteTable"
   }
  },
  "OfVpcPrivateSubnet1RouteTableAssociation68EB4B69": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OfVpcPrivateSubnet1RouteTableD283FA7B"
    },
    "SubnetId": {
     "Ref": "OfVpcPrivateSubnet1SubnetF2C8B46B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "OfVpcPrivateSubnet1DefaultRouteC9FBB582": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "OfVpcPublicSubnet1NATGateway763B4778"
    },
    "RouteTableId": {
     "Ref": "OfVpcPrivateSubnet1RouteTableD283FA7B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "OfVpcPrivateSubnet2SubnetDC65F836": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet2/Subnet"
   }
  },
  "OfVpcPrivateSubnet2RouteTable84F8F037": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet2/RouteTable"
   }
  },
  "OfVpcPrivateSubnet2RouteTableAssociation60E094AD": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "OfVpcPrivateSubnet2RouteTable84F8F037"
    },
    "SubnetId": {
     "Ref": "OfVpcPrivateSubnet2SubnetDC65F836"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "OfVpcPrivateSubnet2DefaultRoute47BB9347": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "OfVpcPublicSubnet1NATGateway763B4778"
    },
    "RouteTableId": {
     "Ref": "OfVpcPrivateSubnet2RouteTable84F8F037"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "OfVpcIGW32ABBEF6": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "HuntazeOfStack/OfVpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/IGW"
   }
  },
  "OfVpcVPCGWAC29B99A": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "OfVpcIGW32ABBEF6"
    },
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfVpc/VPCGW"
   }
  },
  "OfTaskSgC92CC608": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Egress-only",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "OfVpcE0BFA4EC"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfTaskSg/Resource"
   }
  },
  "OfClusterA7E617DB": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OfCluster/Resource"
   }
  },
  "BrowserWorkerTaskTaskRole8D2E5D2C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerTask/TaskRole/Resource"
   }
  },
  "BrowserWorkerTaskTaskRoleDefaultPolicyC1437B8F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Sessions8896A56D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Messages804FA4EB",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ThreadsE6A0B71E",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:ReEncrypt*",
        "kms:GenerateDataKey*"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "OfSessionsKmsKey8FE2B453",
         "Arn"
        ]
       }
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-1:317805897534:secret:of/creds/*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BrowserWorkerTaskTaskRoleDefaultPolicyC1437B8F",
    "Roles": [
     {
      "Ref": "BrowserWorkerTaskTaskRole8D2E5D2C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerTask/TaskRole/DefaultPolicy/Resource"
   }
  },
  "BrowserWorkerTask01044B0A": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Environment": [
       {
        "Name": "OF_DDB_SESSIONS_TABLE",
        "Value": {
         "Ref": "Sessions8896A56D"
        }
       },
       {
        "Name": "OF_DDB_MESSAGES_TABLE",
        "Value": {
         "Ref": "Messages804FA4EB"
        }
       },
       {
        "Name": "OF_DDB_THREADS_TABLE",
        "Value": {
         "Ref": "ThreadsE6A0B71E"
        }
       },
       {
        "Name": "OF_KMS_KEY_ID",
        "Value": {
         "Fn::GetAtt": [
          "OfSessionsKmsKey8FE2B453",
          "Arn"
         ]
        }
       }
      ],
      "Essential": true,
      "Image": {
       "Fn::Sub": "317805897534.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-ofq1abcde-container-assets-317805897534-us-east-1:3a125a58a1bd4fe706fef4a15784b01a4a2dcf6ec26159bb7c4459de94ad1b89"
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "BrowserWorkerLogs87663EC0"
        },
        "awslogs-stream-prefix": "of-browser",
        "awslogs-region": "us-east-1"
       }
      },
      "Name": "of-browser-worker",
      "Ulimits": [
       {
        "HardLimit": 8192,
        "Name": "nofile",
        "SoftLimit": 8192
       }
      ]
     }
    ],
    "Cpu": "2048",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "BrowserWorkerTaskExecutionRole51F82989",
      "Arn"
     ]
    },
    "Family": "HuntazeOfStackBrowserWorkerTaskCED33274",
    "Memory": "8192",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "RuntimePlatform": {
     "CpuArchitecture": "X86_64",
     "OperatingSystemFamily": "LINUX"
    },
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "BrowserWorkerTaskTaskRole8D2E5D2C",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerTask/Resource"
   }
  },
  "BrowserWorkerTaskExecutionRole51F82989": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerTask/ExecutionRole/Resource"
   }
  },
  "BrowserWorkerTaskExecutionRoleDefaultPolicy0F449908": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ecr:us-east-1:317805897534:repository/cdk-ofq1abcde-container-assets-317805897534-us-east-1"
         ]
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "BrowserWorkerLogs87663EC0",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BrowserWorkerTaskExecutionRoleDefaultPolicy0F449908",
    "Roles": [
     {
      "Ref": "BrowserWorkerTaskExecutionRole51F82989"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerTask/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "BrowserWorkerLogs87663EC0": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": "/huntaze/of/browser-worker",
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/BrowserWorkerLogs/Resource"
   }
  },
  "SendWorkerServiceRole4B5EF651": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SendWorker/ServiceRole/Resource"
   }
  },
  "SendWorkerServiceRoleDefaultPolicyFE3FF264": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Sessions8896A56D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Messages804FA4EB",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "OfSendQueue3961ABF3",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "ecs:RunTask",
        "iam:PassRole"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendWorkerServiceRoleDefaultPolicyFE3FF264",
    "Roles": [
     {
      "Ref": "SendWorkerServiceRole4B5EF651"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SendWorker/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendWorkerC9B374FE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-ofq1abcde-assets-317805897534-us-east-1",
     "S3Key": "bd4c13d72a6dbf02dde6cc8c54fd92e7bac75980919a90b15b6301f7be531ebd.zip"
    },
    "Environment": {
     "Variables": {
      "OF_ECS_CLUSTER_ARN": {
       "Fn::GetAtt": [
        "OfClusterA7E617DB",
        "Arn"
       ]
      },
      "OF_ECS_TASKDEF_ARN": {
       "Ref": "BrowserWorkerTask01044B0A"
      },
      "OF_VPC_SUBNETS": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "OfVpcPrivateSubnet1SubnetF2C8B46B"
         },
         ",",
         {
          "Ref": "OfVpcPrivateSubnet2SubnetDC65F836"
         }
        ]
       ]
      },
      "OF_TASK_SG_ID": {
       "Fn::GetAtt": [
        "OfTaskSgC92CC608",
        "GroupId"
       ]
      },
      "OF_DDB_SESSIONS_TABLE": {
       "Ref": "Sessions8896A56D"
      },
      "OF_DDB_MESSAGES_TABLE": {
       "Ref": "Messages804FA4EB"
      },
      "OF_KMS_KEY_ID": {
       "Fn::GetAtt": [
        "OfSessionsKmsKey8FE2B453",
        "Arn"
       ]
      },
      "APP_ORIGIN": "https://app.huntaze.com",
      "WORKER_TOKEN": ""
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "SendWorkerServiceRole4B5EF651",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "SendWorkerServiceRoleDefaultPolicyFE3FF264",
    "SendWorkerServiceRole4B5EF651"
   ],
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SendWorker/Resource",
    "aws:asset:path": "/Users/765h/Huntaze/infra/cdk",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendWorkerSqsEventSourceHuntazeOfStackOfSendQueue81EBCE1D6BB20340": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "BatchSize": 10,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "OfSendQueue3961ABF3",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "SendWorkerC9B374FE"
    },
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ],
    "ScalingConfig": {
     "MaximumConcurrency": 10
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SendWorker/SqsEventSource:HuntazeOfStackOfSendQueue81EBCE1D/Resource"
   }
  },
  "SyncDispatcherServiceRole3EB2A9AD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SyncDispatcher/ServiceRole/Resource"
   }
  },
  "SyncDispatcherServiceRoleDefaultPolicy794664EB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "Sessions8896A56D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "ecs:RunTask",
        "iam:PassRole"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SyncDispatcherServiceRoleDefaultPolicy794664EB",
    "Roles": [
     {
      "Ref": "SyncDispatcherServiceRole3EB2A9AD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SyncDispatcher/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SyncDispatcher467CB492": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-ofq1abcde-assets-317805897534-us-east-1",
     "S3Key": "85962eb3d17a30ae60661b87699ea6829fd80488a3231831ebc84708624f92af.zip"
    },
    "Environment": {
     "Variables": {
      "OF_ECS_CLUSTER_ARN": {
       "Fn::GetAtt": [
        "OfClusterA7E617DB",
        "Arn"
       ]
      },
      "OF_ECS_TASKDEF_ARN": {
       "Ref": "BrowserWorkerTask01044B0A"
      },
      "OF_VPC_SUBNETS": {
       "Fn::Join": [
        "",
        [
         {
          "Ref": "OfVpcPrivateSubnet1SubnetF2C8B46B"
         },
         ",",
         {
          "Ref": "OfVpcPrivateSubnet2SubnetDC65F836"
         }
        ]
       ]
      },
      "OF_TASK_SG_ID": {
       "Fn::GetAtt": [
        "OfTaskSgC92CC608",
        "GroupId"
       ]
      },
      "OF_DDB_SESSIONS_TABLE": {
       "Ref": "Sessions8896A56D"
      },
      "OF_DDB_MESSAGES_TABLE": {
       "Ref": "Messages804FA4EB"
      },
      "OF_KMS_KEY_ID": {
       "Fn::GetAtt": [
        "OfSessionsKmsKey8FE2B453",
        "Arn"
       ]
      },
      "APP_ORIGIN": "https://app.huntaze.com",
      "WORKER_TOKEN": ""
     }
    },
    "Handler": "index.handler",
    "MemorySize": 256,
    "Role": {
     "Fn::GetAtt": [
      "SyncDispatcherServiceRole3EB2A9AD",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 60
   },
   "DependsOn": [
    "SyncDispatcherServiceRoleDefaultPolicy794664EB",
    "SyncDispatcherServiceRole3EB2A9AD"
   ],
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/SyncDispatcher/Resource",
    "aws:asset:path": "/Users/765h/Huntaze/infra/cdk",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "InboxSyncRuleB3752CD5": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "rate(5 minutes)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "SyncDispatcher467CB492",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/InboxSyncRule/Resource"
   }
  },
  "InboxSyncRuleAllowEventRuleHuntazeOfStackSyncDispatcher4ECC64872C8958B7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SyncDispatcher467CB492",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "InboxSyncRuleB3752CD5",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/InboxSyncRule/AllowEventRuleHuntazeOfStackSyncDispatcher4ECC6487"
   }
  },
  "OFLoginFailuresGt5EA77F159": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     "arn:aws:sns:us-east-1:317805897534:alerts"
    ],
    "AlarmDescription": "OF login failures > 5 in the last hour",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "DatapointsToAlarm": 1,
    "EvaluationPeriods": 1,
    "MetricName": "LoginFailures",
    "Namespace": "Huntaze/OFWorker",
    "Period": 3600,
    "Statistic": "Sum",
    "Threshold": 5,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OFLoginFailuresGt5/Resource"
   }
  },
  "OFMemoryUsageHighF483F82E": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     "arn:aws:sns:us-east-1:317805897534:alerts"
    ],
    "AlarmDescription": "OF worker memory usage over 7000 MB",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "DatapointsToAlarm": 1,
    "EvaluationPeriods": 1,
    "MetricName": "MemoryUsageMB",
    "Namespace": "Huntaze/OFWorker",
    "Period": 300,
    "Statistic": "Maximum",
    "Threshold": 7000,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OFMemoryUsageHigh/Resource"
   }
  },
  "OFWorkerDashboard030EE0B0": {
   "Type": "AWS::CloudWatch::Dashboard",
   "Properties": {
    "DashboardBody": {
     "Fn::Join": [
      "",
      [
       "{\"widgets\":[{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":0,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Login Success/Failure (per 5m)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"Huntaze/OFWorker\",\"LoginSuccessCount\",{\"stat\":\"Sum\"}],[\"Huntaze/OFWorker\",\"LoginFailureCount\",{\"stat\":\"Sum\"}]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":12,\"height\":6,\"x\":12,\"y\":0,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Action Duration (ms)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"Huntaze/OFWorker\",\"ActionDurationMs\"]],\"yAxis\":{}}},{\"type\":\"metric\",\"width\":24,\"height\":6,\"x\":0,\"y\":6,\"properties\":{\"view\":\"timeSeries\",\"title\":\"Session Duration (ms) & Memory (MB)\",\"region\":\"",
       {
        "Ref": "AWS::Region"
       },
       "\",\"metrics\":[[\"Huntaze/OFWorker\",\"SessionDurationMs\"],[\"Huntaze/OFWorker\",\"MemoryUsageMB\",{\"stat\":\"Maximum\"}]],\"yAxis\":{}}}]}"
      ]
     ]
    },
    "DashboardName": "HuntazeOfStack-OFWorker"
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/OFWorkerDashboard/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Sy27bMBD8ltxpNlGAAj06dhIYbVNVDnI1VtRapiWRKndpQyD07wUpWw6KnnZ29jUjMZPZwzd5fwdnWqiqWbS6lGHLoBoBZ9qFpiMZvuMgVnsTw7LVQDFJYBTVYKCzVSnDO5QtxkoCo6A/JMNvjz6RCYwCVSbDR68i9ZGvRO7LVqutLw1y5G6osJ5x3jnxN25JZJUG1tbMzRE8b/IY3oBfgfEMg8idPgHjbfHGMDqDc8Ok5JItmUEdOjQstqi80zy8Ouv7pOEzEa2QDKvWE6OL5St8AVdDlEnNGvfa6KvIfxlrGLRBd+NGoaGTobCT6RRz22qVVE5oFK2tSYYftp6VXXEU5XZAhExybVWDbtNBHb8WcqzJAntLmq0bnoBQtNCVFeyMrfBI8i2FF29UEkiP11XTPD3KJ68a5E+jMqz2Zp54PqHhrfVO4U/oe23q9E/+y+boOk2UXGPsIBkKfzHu0wMyJN9tr1W6p1rrqzOwOsiwbMF10yOMYA10KC24KlJzMo6iQEpnRTKwZagvx3957j2PIhqXR/pyyjL58FXe3x1J64XzhnWHspjiXxhbfhQjAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "HuntazeOfStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "SendQueueUrl": {
   "Value": {
    "Ref": "OfSendQueue3961ABF3"
   }
  },
  "SessionsTable": {
   "Value": {
    "Ref": "Sessions8896A56D"
   }
  },
  "MessagesTable": {
   "Value": {
    "Ref": "Messages804FA4EB"
   }
  },
  "ThreadsTable": {
   "Value": {
    "Ref": "ThreadsE6A0B71E"
   }
  },
  "KmsKeyArn": {
   "Value": {
    "Fn::GetAtt": [
     "OfSessionsKmsKey8FE2B453",
     "Arn"
    ]
   }
  },
  "ClusterArn": {
   "Value": {
    "Fn::GetAtt": [
     "OfClusterA7E617DB",
     "Arn"
    ]
   }
  },
  "TaskDefArn": {
   "Value": {
    "Ref": "BrowserWorkerTask01044B0A"
   }
  },
  "TaskSecurityGroup": {
   "Value": {
    "Fn::GetAtt": [
     "OfTaskSgC92CC608",
     "GroupId"
    ]
   }
  },
  "SubnetsPrivate": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "OfVpcPrivateSubnet1SubnetF2C8B46B"
      },
      ",",
      {
       "Ref": "OfVpcPrivateSubnet2SubnetDC65F836"
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/ofq1abcde/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}